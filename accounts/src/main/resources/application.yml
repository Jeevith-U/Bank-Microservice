server:
  port: 8080

spring:
  application:
    name: accounts

  profiles:
    active: "prod"

  config:
    import: "optional:configserver:http://localhost:8071/"

  datasource:
    url: jdbc:mysql://localhost:3306/bank_microservice?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

    function:
      definition: updateCommunication

    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
      rabbit:
        binder:
          environment:
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: guest
                password: guest
                connection-timeout: 10s

management:
  endpoints:
    web:
      exposure:
        include: "*"

  endpoint:
    shutdown:
      enabled: true
    info:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Bank Accounts Application"
    version: "1.0.0"

logging:
  level:
    com.jeevith.accounts: DEBUG

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
